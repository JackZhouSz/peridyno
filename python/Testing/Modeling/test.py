import PyPeridyno as dyno

scn = dyno.SceneGraph()
scn.set_total_time(3.0)
scn.set_gravity(dyno.Vector3f([0, -9.8, 0]))
scn.set_upper_bound(dyno.Vector3f([0.5, 1, 4]))
scn.set_lower_bound(dyno.Vector3f([-0.5, 0, 4]))

cube1 = dyno.CubeModel3f()
scn.add_node(cube1)
cube1.var_location().set_value(dyno.Vector3f([0.125, 0.125, 0.125]))
cube1.var_length().set_value(dyno.Vector3f([0.15, 0.15, 0.15]))
cube1.graphics_pipeline().disable()
sampler1 = dyno.ShapeSampler3f()
scn.add_node(sampler1)
sampler1.var_sampling_distance().set_value(0.005)
sampler1.set_visible(False)
cube1.connect(sampler1.import_shape())
initialParticles1 = dyno.MakeParticleSystem3f()
scn.add_node(initialParticles1)
sampler1.state_point_set().promote_output().connect(initialParticles1.in_points())

app = dyno.GlfwApp()
app.set_scenegraph(scn)
app.initialize(1366, 768, True)
app.main_loop()
